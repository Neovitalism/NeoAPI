plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

version = "${project.mod_version}"
group = 'me.neovitalism'

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    implementation 'net.kyori:adventure-text-minimessage:4.17.0'
    implementation "net.kyori:adventure-text-serializer-gson:4.17.0"
    shadow(implementation (group: 'org.yaml', name: 'snakeyaml', version: '2.0'))
    modImplementation include("net.kyori:adventure-platform-fabric:5.14.1")
    compileOnly 'net.luckperms:api:5.4'
}

Map<String, String> resourceProperties = new HashMap<>();
resourceProperties.put("version", (String) project.mod_version)
resourceProperties.put("loader_version", project.loader_version)
resourceProperties.put("minecraft_version", project.minecraft_version)

processResources {
    filesMatching("fabric.mod.json") {
        expand resourceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

shadowJar {
    configurations = [project.configurations.shadow]
    relocate "org.yaml", "me.neovitalism.neoapi.shadow.org.yaml"
}

remapJar {
    dependsOn(shadowJar)
    inputFile = tasks.shadowJar.archiveFile
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'me.neovitalism'
            artifactId = 'NeoAPI'
            version = "${project.version}"
            artifact(remapJar)
        }
    }
}