plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = 'NeoAPI'
version = "${project.mod_version}"
group = 'me.neovitalism.neoapi'

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation 'net.kyori:adventure-text-minimessage:4.12.0'
    shadow(implementation (group: 'org.yaml', name: 'snakeyaml', version: '2.0'))
    modImplementation include("net.kyori:adventure-platform-fabric:5.5.2")
    compileOnly 'net.luckperms:api:5.4'
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier.set("dev")
    relocate "org.yaml", "me.neovitalism.neoapi.shadow.org.yaml"
}

remapJar {
    dependsOn(shadowJar)
    inputFile = tasks.shadowJar.archiveFile
}